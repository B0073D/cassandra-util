# These can be overriden with environment variables so you can execute your tests against arbitrary versions
DSE_VERSION = "4.8.8"
CCM="../tools/ccm/ccm"

# This configuration is referenced only by the testing process, nothing in the production
# path reads this - this is just how to spin up local testing clusters.
cassandra.ccm = {
  // Where to stick the config / data files for cassandra instances
  clusters = [
    {
      rootDir: "/tmp/cassandra-1"
      name: "cassandra-1"
      type: "dse" // or community
      version: ${DSE_VERSION}
      dseUsername: ${DSE_USERNAME}
      dsePassword: ${DSE_PASSWORD}
      // existingBinariesDir = "/path/to/existing/CassandraBinaries"
      updateConf = {
        // updates to cassandra.yaml in the form of:
        // someProperty: someValue
      }
      updateDseConf = {
        // updates to dse.yaml in the form of:
        // someProperty: someValue
      }
      // Class names of additional jar files to copy to Cassandra - the jar will be
      // selected by the class loader.  Dependencies are not traversed, so if the jar
      // has its own dependencies, you'll need to be certain to include at least one
      // class name from each dependent jar
      additionalClassJars: [
      ]
      schemaFiles: [
      ]
      postSchemaCommands: [
        ["./cores","http://127.0.0.2:8983","CREATE","netflows.netflows", "netflows", "test"],
      ]
      datacenters = [
        {
          name: "us-west-2"
          workload: "solr"
          additionalClassJars: []
          nodes: [
            {
              name: "solr-1"
              address: "127.0.0.1"
              jmxPort: 7101
              remoteDebugPort: 2101
              additionalClassJars: []
            }
          ]
        }
      ]
    } // end cassandra.ccm.clusters[0]
  ] // end cassandra.ccm.clusters
} // end cassandra.ccm

cassandra.connections = {
  default = {
    max_unlogged_batch_statements: 1000
    max_counter_batch_statements: 1000

    seeds: ["127.0.0.1"]
    clustername: "none"
    ssl.enabled = false
    loadbalancer = {
      type = DCAwareRoundRobinPolicy
      localDc="us-west-2"
    }
  }
}

include "testing.conf"
include "local.conf"